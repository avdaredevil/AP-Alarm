param($scale=1)
# =======================================START=OF=COMPILER==========================================================|
#    The Following Code was added by AP-Compiler Version [1.2] To Make this program independent of AP-Core Engine
#    GitHub: https://github.com/avdaredevil/AP-Compiler
# ==================================================================================================================|
$Script:PSHell=$(if($PSHell){$PSHell}elseif($PSScriptRoot){$PSScriptRoot}else{"."});
iex ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("ZnVuY3Rpb24gQVAtUmVxdWlyZSB7cGFyYW0oW1BhcmFtZXRlcihNYW5kYXRvcnk9JFRydWUpXVtBbGlhcygiRnVuY3Rpb25hbGl0eSIsIkxpYnJhcnkiKV1bU3RyaW5nXSRMaWIsIFtTY3JpcHRCbG9ja10kT25GYWlsPXt9LCBbU3dpdGNoXSRQYXNzVGhydSkNCg0KICAgICRMb2FkTW9kdWxlID0gew0KICAgICAgICBwYXJhbSgkRmlsZSxbYm9vbF0kSW1wb3J0KQ0KICAgICAgICB0cnkge0ltcG9ydC1Nb2R1bGUgJEZpbGUgLWVhIHN0b3A7cmV0dXJuIDF9IGNhdGNoIHt9DQogICAgICAgICRMaWI9QVAtQ29udmVydFBhdGggIjxMSUI+IjskTEYgPSAiJExpYlwkRmlsZSINCiAgICAgICAgW3N0cmluZ10kZiA9IGlmKHRlc3QtcGF0aCAtdCBsZWFmICRMRil7JExGfWVsc2VpZih0ZXN0LXBhdGggLXQgbGVhZiAiJExGLmRsbCIpeyIkTEYuZGxsIn0NCiAgICAgICAgaWYgKCRmIC1hbmQgJEltcG9ydCkge0ltcG9ydC1Nb2R1bGUgJGZ9DQogICAgICAgIHJldHVybiAkZg0KICAgIH0NCiAgICAkU3RhdCA9ICQoc3dpdGNoIC1yZWdleCAoJExpYi50cmltKCkpIHsNCiAgICAgICAgIl5JbnRlcm5ldCIgICAgICAgICAgICAgICB7dGVzdC1jb25uZWN0aW9uIGdvb2dsZS5jb20gLUNvdW50IDEgLVF1aWV0fQ0KICAgICAgICAiXmRlcDooLiopIiAgICAgICAgICAgICAgIHtHZXQtV2hlcmUgJE1hdGNoZXNbMV19DQogICAgICAgICJeKGxpYnxtb2R1bGUpOiguKikiICAgICAgeyRMb2FkTW9kdWxlLmludm9rZSgkTWF0Y2hlc1syXSwgJHRydWUpfQ0KICAgICAgICAiXihsaWJ8bW9kdWxlKV90ZXN0OiguKikiIHskTG9hZE1vZHVsZS5pbnZva2UoJE1hdGNoZXNbMl0pfQ0KICAgICAgICAiXmZ1bmN0aW9uOiguKikiICAgICAgICAgIHtnY20gJE1hdGNoZXNbMV0gLWVhIFNpbGVudGx5Q29udGludWV9DQogICAgICAgICJec3RyaWN0X2Z1bmN0aW9uOiguKikiICAge1Rlc3QtUGF0aCAiRnVuY3Rpb246XCQoJE1hdGNoZXNbMV0pIn0NCiAgICAgICAgZGVmYXVsdCB7V3JpdGUtQVAgIiFJbnZhbGlkIHNlbGVjdG9yIHByb3ZpZGVkIFskKCIkTGliIi5zcGxpdCgnOicpWzBdKV0iO3Rocm93ICdCQURfU0VMRUNUT1InfQ0KICAgIH0pDQogICAgaWYgKCEkU3RhdCkgeyRPbkZhaWwuSW52b2tlKCl9DQogICAgaWYgKCRQYXNzVGhydSkge3JldHVybiAkU3RhdH0NCn0KCmZ1bmN0aW9uIEdldC1XaGVyZSB7cGFyYW0oW1BhcmFtZXRlcihNYW5kYXRvcnk9JHRydWUpXVtzdHJpbmddJEZpbGUsIFtTd2l0Y2hdJEFsbCwgW1N3aXRjaF0kTWFudWFsU2NhbikNCg0KICAgICRXaGVyZUJpbkV4aXN0cyA9IEdldC1Db21tYW5kICJ3aGVyZSIgLWVhIFNpbGVudGx5Q29udGludWUNCiAgICAkSXNVbml4ID0gJFBTVmVyc2lvblRhYmxlLlBsYXRmb3JtIC1lcSAiVW5peCINCiAgICBpZiAoJEZpbGUgLWVxICJ3aGVyZSIgLW9yICRGaWxlIC1lcSAid2hlcmUuZXhlIikge3JldHVybiAkV2hlcmVCaW5FeGlzdHN9DQogICAgaWYgKCRXaGVyZUJpbkV4aXN0cyAtYW5kICEkTWFudWFsU2Nhbikgew0KICAgICAgICAkT3V0PSRudWxsDQogICAgICAgIGlmICgkSXNVbml4KSB7DQogICAgICAgICAgICAkT3V0ID0gd2hpY2ggJGZpbGUgMj4kbnVsbA0KICAgICAgICB9IGVsc2UgeyRPdXQgPSB3aGVyZS5leGUgJGZpbGUgMj4kbnVsbH0NCiAgICAgICAgDQogICAgICAgIGlmICghJE91dCkge3JldHVybn0NCiAgICAgICAgaWYgKCRBbGwpIHtyZXR1cm4gJE91dH0NCiAgICAgICAgcmV0dXJuIEAoJE91dClbMF0NCiAgICB9DQogICAgZm9yZWFjaCAoJEZvbGRlciBpbiAoR2V0LVBhdGgpKSB7DQogICAgICAgIGlmICgkSXNVbml4KSB7DQogICAgICAgICAgICAkTG9va3VwID0gIiRGb2xkZXIvJEZpbGUiDQogICAgICAgICAgICBpZiAoIShUZXN0LVBhdGggLVBhdGhUeXBlIExlYWYgJExvb2t1cCkpIHtjb250aW51ZX0NCiAgICAgICAgICAgIFJlc29sdmUtUGF0aCAkTG9va3VwIHwgJSBQYXRoDQogICAgICAgICAgICBpZiAoISRBbGwpIHtyZXR1cm59DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBmb3JlYWNoICgkRXh0ZW5zaW9uIGluIChHZXQtUGF0aCAtUGF0aFZhciBQQVRIRVhUKSkgew0KICAgICAgICAgICAgICAgICRMb29rdXAgPSAiJEZvbGRlci8kRmlsZSRFeHRlbnNpb24iDQogICAgICAgICAgICAgICAgaWYgKCEoVGVzdC1QYXRoIC1QYXRoVHlwZSBMZWFmICRMb29rdXApKSB7Y29udGludWV9DQogICAgICAgICAgICAgICAgUmVzb2x2ZS1QYXRoICRMb29rdXAgfCAlIFBhdGgNCiAgICAgICAgICAgICAgICBpZiAoISRBbGwpIHtyZXR1cm59DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9CgpmdW5jdGlvbiBHZXQtQ29sb3Igew0KICAgIDwjICAuRGVzY3JpcHRpb24NCiAgICAgICAgRmV0Y2hlcyBiYXNpYyBjb2xvcnMgdXNpbmcgdGhlIFVuaWNvZGUgRXNjYXBlIHNlcXVlbmNlcw0KICAgICM+DQogICAgcGFyYW0gKA0KICAgICAgICBbVmFsaWRhdGVTZXQoDQogICAgICAgICAgICAncicsJ3Jlc2V0JywnZCcsJ2RpbScsJ3MnLCdzdHJpa2UnLCd1JywndW5kZXJsaW5lJywnYicsJ2JvbGQnLCdpJywnaXRhbGljJywNCiAgICAgICAgICAgICdCbGFjaycsJ0RhcmtCbHVlJywnRGFya0dyZWVuJywnRGFya0N5YW4nLCdEYXJrUmVkJywnRGFya01hZ2VudGEnLCdEYXJrWWVsbG93JywnR3JheScsJ0RhcmtHcmF5JywnQmx1ZScsJ0dyZWVuJywnQ3lhbicsJ1JlZCcsJ01hZ2VudGEnLCdZZWxsb3cnLCdXaGl0ZScsDQogICAgICAgICAgICAnYmcuQmxhY2snLCdiZy5EYXJrQmx1ZScsJ2JnLkRhcmtHcmVlbicsJ2JnLkRhcmtDeWFuJywnYmcuRGFya1JlZCcsJ2JnLkRhcmtNYWdlbnRhJywnYmcuRGFya1llbGxvdycsJ2JnLkdyYXknLCdiZy5EYXJrR3JheScsJ2JnLkJsdWUnLCdiZy5HcmVlbicsJ2JnLkN5YW4nLCdiZy5SZWQnLCdiZy5NYWdlbnRhJywnYmcuWWVsbG93JywnYmcuV2hpdGUnDQogICAgICAgICldW1N0cmluZ1tdXSRDb2RlLA0KICAgICAgICBbQWxpYXMoJ2JnJyldW1N3aXRjaF0kQmFja2dyb3VuZCwNCiAgICAgICAgW1N3aXRjaF0kQ29kZVN0cmluZw0KICAgICkNCiAgICAkQWxpYXNUYWJsZSA9IEB7dSA9ICd1bmRlcmxpbmUnO2IgPSAnYm9sZCc7aSA9ICdpdGFsaWMnO3IgPSAncmVzZXQnO3MgPSAnc3RyaWtlJztkID0gJ2RpbSd9DQogICAgaWYgKCEkR2xvYmFsOkFQX0NPTE9SX1RBQkxFKSB7DQogICAgICAgICRUQkwgPSAkR2xvYmFsOkFQX0NPTE9SX1RBQkxFID0gQHtyZXNldCA9IDA7Ym9sZCA9IDE7ZGltID0gMjtpdGFsaWMgPSAzO3VuZGVybGluZSA9IDQ7c3RyaWtlID0gOX0NCiAgICAgICAgMCwxIHwgJSB7DQogICAgICAgICAgICAkQmdJbmRleCA9ICRfDQogICAgICAgICAgICAwLDEgfCAlIHsNCiAgICAgICAgICAgICAgICAkU3BjSW5kZXggPSAkXw0KICAgICAgICAgICAgICAgICRpID0gMA0KICAgICAgICAgICAgICAgICdCbGFjay5UfFJlZHxHcmVlbnxZZWxsb3d8Qmx1ZXxNYWdlbnRhfEN5YW58V2hpdGUnLnNwbGl0KCd8JykgfCAlIHsNCiAgICAgICAgICAgICAgICAgICAgJEluY3IgPSAkQmdJbmRleCAqIDEwDQogICAgICAgICAgICAgICAgICAgICRDb2xOYW1lID0gKCgnJywnYmcuJylbJEJnSW5kZXhdKSsoKCdEYXJrJywnJylbJFNwY0luZGV4XSkrJF8NCiAgICAgICAgICAgICAgICAgICAgJENvbFNwYWNlID0gKDMwLCA5MClbJFNwY0luZGV4XSArICRJbmNyDQogICAgICAgICAgICAgICAgICAgICRUQkwuJENvbE5hbWUgPSAkQ29sU3BhY2UrKCRpKyspDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIEB7RGFya0dyYXkgPSAnQmxhY2suVCc7QmxhY2sgPSAnRGFya0JsYWNrLlQnO0dyYXkgPSAnRGFya1doaXRlJ30uR2V0RW51bWVyYXRvcigpIHwgJSB7DQogICAgICAgICAgICAkVEJMLigkXy5LZXkpID0gJFRCTC4oJF8uVmFsdWUpDQogICAgICAgICAgICAkVEJMLignYmcuJyskXy5LZXkpID0gJFRCTC4oJ2JnLicrJF8uVmFsdWUpDQogICAgICAgICAgICAkVEJMLnJlbW92ZSgkXy5WYWx1ZSkNCiAgICAgICAgICAgICRUQkwucmVtb3ZlKCdiZy4nKyRfLlZhbHVlKQ0KICAgICAgICB9DQogICAgfQ0KICAgICRDb2RlcyA9ICgkQ29kZSskQXJncyB8ICUgew0KICAgICAgICAkR2xvYmFsOkFQX0NPTE9SX1RBQkxFLihKUy1PUiAkQWxpYXNUYWJsZS4kXyAkXykNCiAgICB9KSAtam9pbiAnOycNCiAgICBpZiAoJENvZGVTdHJpbmcpIHtyZXR1cm4gJENvZGVzfQ0KICAgIHJldHVybiAiJChHZXQtRXNjYXBlKVske0NvZGVzfW0iDQp9CgpTZXQtQWxpYXMgY29sIEdldC1Db2xvcg==")))
# ========================================END=OF=COMPILER===========================================================|

CLEAR-HOST

# Array Data
# First Column Identifies Octave (A-C) (where C is the highest) - Octave 0 = REST
# Second Column Identifies Note
# Third Column Designates Note as Sharp "S" or Not "N"
# Fourth Column Identifies 8,4,2,1 (Eighth, Quarter, 1/2, Whole)
# Fifth Column Identifies if note is "Dotted"

#Musical Notes Array
[array]$Notes=$NULL
$Notes+=@{"RRR"=37}
$Notes+=@{"BCN"=290}
$Notes+=@{"BCS"=310}
$Notes+=@{"BDN"=330}
$Notes+=@{"BDS"=345}
$Notes+=@{"BEN"=360}
$Notes+=@{"BFN"=390}
$Notes+=@{"BFS"=415}
$Notes+=@{"BGN"=440}
$Notes+=@{"BGS"=460}
$Notes+=@{"CAN"=480}
$Notes+=@{"CAS"=505}
$Notes+=@{"CBN"=530}
$Notes+=@{"CCN"=580}
$Notes+=@{"CCS"=605}
$Notes+=@{"CDN"=630}
$Notes+=@{"CDS"=670}
$Notes+=@{"CEN"=710}
$Notes+=@{"CFN"=800}
$Notes+=@{"CFS"=840}
$Notes+=@{"CGN"=880}
$Notes+=@{"CGS"=920}

# Our 'Sheet Music' - 5 characters define each note and beat.
# First three are the note, the last pair are the beat
$MusicString=$NULL
$MusicString+="CEN80CDN80CEN80CCN80CAN80CCN80BGN80RRR80"
$MusicString+="CEN80CDN80CEN80CCN80CAN80CCN80BGN80RRR80"
$MusicString+="CEN80CFS80CGN80CFS80CGN80CEN80CFS80CEN80"
$MusicString+="CFS80CDN80CEN80CCN80CAN80CCN80CEN80"

$Start=0
$End=$MusicString.Length

do {
# Grab the 5 bytes for the Tone and Duration
$Data=$MusicString.Substring($Start,5)

# Get the Frequency for the Note
$Note=$Data.substring(0,3)
$Tone=$Notes.$Note

# Get the Length 
$Length=[int]$Data.substring(3,1)
$Dotted=$Data.substring(4,1)

# Compute the Time to play
$PlayTime=4*(1/$length)*(.5*[int]($Dotted="1"))

# Play a note or Rest
If ($Note -ne "RRR"){[console]::beep($tone,200*($Playtime)*$scale)}
Else { START-SLEEP -milliseconds (600*$Playtime*$scale)}

$Start=$Start+5

} Until ($Start -ge $End)

